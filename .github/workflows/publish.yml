name: "Publish"

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-tauri:
    permissions:
      contents: read # 构建阶段只需要读取权限
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            target: "aarch64-apple-darwin"
          - platform: "macos-latest"
            target: "x86_64-apple-darwin"
          # 您可以在这里添加 windows 和 linux 的构建任务
          # - platform: "windows-latest"
          #   target: "x86_64-pc-windows-msvc"
          # - platform: "ubuntu-latest"
          #   target: "x86_64-unknown-linux-gnu"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install frontend dependencies
        run: pnpm install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          args: --target ${{ matrix.target }}

  publish-release:
    permissions:
      contents: write # 发布阶段需要写入权限来创建 Release
    runs-on: ubuntu-latest
    needs: build-tauri # 等待所有构建任务完成

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          # pattern: tauri-* # 取消注释并根据 tauri-action 的输出调整
          # merge-multiple: true # 如果 tauri-action 为每个平台创建单独的 artifact

      - name: Create Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Mirror v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          artifactsPath: "artifacts" # 告知 tauri-action 从下载的 artifacts 中寻找产物